<?xml version="1.0" encoding="UTF-8"?>
<!-- 这是用来测试 XML 模版或标签生成的 SQL语句或参数的 Fenix XML 文件. -->
<fenixs namespace="BlogRepository">

    <!-- 一个最简单的示例来查询我的博客信息. -->
    <fenix id="querySimplyDemo">
        SELECT b FROM Blog AS b
        WHERE
        <equal field="b.id" value="blog.id"/>
    </fenix>

    <!-- 查询我的博客信息2. -->
    <fenix id="queryBlogs2">
        SELECT b FROM Blog AS b
        WHERE
        <in field="b.id" value="ids"/>
        <andEqual match="blog.author != empty" field="b.author" value="blog.author"/>
        <andLike match="blog.title != empty" field="b.title" value="blog.title"/>
        <andBetween match="(?blog.createTime != empty) || (?blog.updateTime != empty)" field="b.createTime" start="blog.createTime" end="blog.updateTime"/>
    </fenix>

    <!-- 根据用户ID、博客信息查询该用户发表的用户博客信息（自定义实体信息）. -->
    <fenix id="queryUserBlogsByTitleWithFenix">
        SELECT
            new com.blinkfox.fenix.vo.UserBlogInfo(u.id, u.name, b.id, b.title, b.author, b.content)
        FROM
            Blog as b,
            com.blinkfox.fenix.entity.User as u
        WHERE
            u.id = b.userId
        <andEqual field="b.userId" value="userId"/>
        <andLike match="blog.title != empty" field="b.title" value="blog.title"/>
        <andLike match="blog.content != empty" field="b.content" value="blog.content"/>
    </fenix>

    <!-- 根据用户ID、博客信息查询该用户发表的用户博客信息（自定义实体信息）. -->
    <fenix id="queryUserBlogsByProjection">
        SELECT
            u.id AS userId, u.name, b.id AS blogId, b.title, b.author, b.content
        FROM
            Blog as b,
            com.blinkfox.fenix.entity.User as u
        WHERE
            u.id = b.userId
        <andEqual field="b.userId" value="userId"/>
        <andLike match="blog.title != empty" field="b.title" value="blog.title"/>
        <andLike match="blog.content != empty" field="b.content" value="blog.content"/>
    </fenix>

</fenixs>
